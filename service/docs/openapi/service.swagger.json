{
  "swagger": "2.0",
  "info": {
    "title": "api/common/v1/common.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Examplev1Service"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/example": {
      "get": {
        "summary": "GET /v1/example - list or search by filters (query: id OR name)",
        "operationId": "Examplev1Service_FindExamples",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindExamplesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "oneof can be added if desired strictness; for now just optional fields",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Examplev1Service"
        ]
      },
      "delete": {
        "summary": "DELETE /v1/example?id=123 - delete by id (query param)",
        "operationId": "Examplev1Service_DeleteExampleById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteExampleByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Examplev1Service"
        ]
      },
      "post": {
        "summary": "POST /v1/example - create or update (id empty/0 =\u003e create, \u003e0 =\u003e update)",
        "operationId": "Examplev1Service_UpsertExample",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertExampleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertExampleRequest"
            }
          }
        ],
        "tags": [
          "Examplev1Service"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1DeleteExampleByIdResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v1MetaResponse"
        }
      }
    },
    "v1Example": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1FindExamplesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Example"
          }
        },
        "meta": {
          "$ref": "#/definitions/v1MetaResponse"
        }
      }
    },
    "v1MetaResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/v1ResponseCode"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional: technical details/field-value for debug in DEV"
        }
      }
    },
    "v1ResponseCode": {
      "type": "string",
      "enum": [
        "RESPONSE_CODE_UNSPECIFIED",
        "RESPONSE_CODE_OK",
        "RESPONSE_CODE_NO_CONTENT",
        "RESPONSE_CODE_BAD_REQUEST",
        "RESPONSE_CODE_UNAUTHORIZED",
        "RESPONSE_CODE_FORBIDDEN",
        "RESPONSE_CODE_NOT_FOUND",
        "RESPONSE_CODE_CONFLICT",
        "RESPONSE_CODE_METHOD_NOT_ALLOWED",
        "RESPONSE_CODE_UNPROCESSABLE_ENTITY",
        "RESPONSE_CODE_INTERNAL_SERVER_ERROR"
      ],
      "default": "RESPONSE_CODE_UNSPECIFIED"
    },
    "v1UpsertExampleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "0 or unset =\u003e create; \u003e0 =\u003e update"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1UpsertExampleResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1Example"
        },
        "meta": {
          "$ref": "#/definitions/v1MetaResponse"
        }
      }
    }
  }
}
