{
  "swagger": "2.0",
  "info": {
    "title": "api/prueba/v1/errors.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PruebaService"
    },
    {
      "name": "TemplatesService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/pruebas": {
      "get": {
        "summary": "GET /pruebas - list or search by filters",
        "operationId": "PruebaService_FindPruebas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pruebav3FindPruebasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "optional",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "description": "optional",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PruebaService"
        ]
      },
      "delete": {
        "summary": "DELETE /pruebas?id=123 - delete by id",
        "operationId": "PruebaService_DeletePruebaById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pruebav3DeletePruebaByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "PruebaService"
        ]
      },
      "post": {
        "summary": "POST /pruebas - create or update (id=0 create, \u003e0 update)",
        "operationId": "PruebaService_UpsertPrueba",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pruebav3UpsertPruebaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pruebav3UpsertPruebaRequest"
            }
          }
        ],
        "tags": [
          "PruebaService"
        ]
      }
    },
    "/templates": {
      "get": {
        "summary": "* Lista todas las plantillas.\r\n\r\n**Descripción**\r\nDevuelve el catálogo completo de plantillas definidas.\r\n\r\n**Parámetros**\r\n_(sin parámetros)_\r\n\r\n**Respuestas**\r\n- `200 OK`: `templates` + `meta.code = OK`\r\n- `200` con error lógico: `meta.code != OK` y `meta.message`\r\n\r\n**Ejemplos**\r\n`GET /templates`",
        "operationId": "TemplatesService_ListTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TemplatesService"
        ]
      },
      "delete": {
        "summary": "* Elimina una plantilla por ID.\r\n\r\n**Descripción**\r\nBorra la plantilla indicada por `id`.\r\n\r\n**Parámetros (query)**\r\n- `id` (**obligatorio**): ID interno\r\n\r\n**Respuestas**\r\n- `200 OK`: `meta.code = OK`\r\n- `200` con error lógico: `meta.code != OK` (p. ej., ID inexistente)\r\n\r\n**Ejemplos**\r\n`DELETE /templates?id=123`",
        "operationId": "TemplatesService_DeleteTemplateById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteTemplateByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID interno",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "TemplatesService"
        ]
      },
      "post": {
        "summary": "* Crea o actualiza una plantilla (upsert).\r\n\r\n**Descripción**\r\nSi `id` es `0` o no se envía → crea; si `id` \u003e 0 → actualiza.\r\n\r\n**Parámetros (body JSON)**\r\n- `id` (opcional, 0=create)\r\n- `name` (**obligatorio**)\r\n\r\n**Respuestas**\r\n- `200 OK`: `template` resultante + `meta.code = OK`\r\n- `200` con error lógico: validación, duplicidad de `name`, etc.\r\n\r\n**Ejemplos**\r\n`POST /templates`\r\nBody: `{ \"name\":\"Template 1\" }`",
        "operationId": "TemplatesService_UpsertTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "* Cuerpo para crear/actualizar una plantilla.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertTemplateRequest"
            }
          }
        ],
        "tags": [
          "TemplatesService"
        ]
      }
    }
  },
  "definitions": {
    "apipruebav1MetaResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/apipruebav1ResponseCode",
          "title": "RESPONSE_CODE_OK or other codes"
        },
        "message": {
          "type": "string",
          "title": "e.g. \"ok\", \"ip blocked\", \"db error\", \"user not found\""
        }
      },
      "description": "Your meta-object: only code and message."
    },
    "apipruebav1ResponseCode": {
      "type": "string",
      "enum": [
        "RESPONSE_CODE_UNSPECIFIED",
        "RESPONSE_CODE_OK",
        "RESPONSE_CODE_BAD_REQUEST",
        "RESPONSE_CODE_UNAUTHORIZED",
        "RESPONSE_CODE_FORBIDDEN",
        "RESPONSE_CODE_NOT_FOUND",
        "RESPONSE_CODE_METHOD_NOT_ALLOWED",
        "RESPONSE_CODE_INTERNAL_SERVER_ERROR",
        "RESPONSE_CODE_NOT_IMPLEMENTED",
        "RESPONSE_CODE_SERVICE_UNAVAILABLE"
      ],
      "default": "RESPONSE_CODE_UNSPECIFIED",
      "description": "Minimum set of codes. Zero is mandatory in proto3.\n\n - RESPONSE_CODE_OK: success\n - RESPONSE_CODE_BAD_REQUEST: bad request\n - RESPONSE_CODE_UNAUTHORIZED: unauthorized\n - RESPONSE_CODE_FORBIDDEN: forbidden\n - RESPONSE_CODE_NOT_FOUND: not found\n - RESPONSE_CODE_METHOD_NOT_ALLOWED: method not allowed\n - RESPONSE_CODE_INTERNAL_SERVER_ERROR: server error\n - RESPONSE_CODE_NOT_IMPLEMENTED: not implemented\n - RESPONSE_CODE_SERVICE_UNAVAILABLE: service unavailable"
    },
    "apitemplatev1MetaResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/apitemplatev1ResponseCode",
          "title": "RESPONSE_CODE_OK or other codes"
        },
        "message": {
          "type": "string",
          "title": "message description (e.g. \"ok\", \"ip blocked\", \"data base error\", \"user not found\" etc.)"
        }
      },
      "description": "Your meta-object: only code and message."
    },
    "apitemplatev1ResponseCode": {
      "type": "string",
      "enum": [
        "RESPONSE_CODE_UNSPECIFIED",
        "RESPONSE_CODE_OK",
        "RESPONSE_CODE_BAD_REQUEST",
        "RESPONSE_CODE_UNAUTHORIZED",
        "RESPONSE_CODE_FORBIDDEN",
        "RESPONSE_CODE_NOT_FOUND",
        "RESPONSE_CODE_METHOD_NOT_ALLOWED",
        "RESPONSE_CODE_INTERNAL_SERVER_ERROR",
        "RESPONSE_CODE_NOT_IMPLEMENTED",
        "RESPONSE_CODE_SERVICE_UNAVAILABLE"
      ],
      "default": "RESPONSE_CODE_UNSPECIFIED",
      "description": "Minimum set of codes. Zero is mandatory in proto3.\n\n - RESPONSE_CODE_OK: success\n - RESPONSE_CODE_BAD_REQUEST: bad request\n - RESPONSE_CODE_UNAUTHORIZED: unauthorized\n - RESPONSE_CODE_FORBIDDEN: forbidden\n - RESPONSE_CODE_NOT_FOUND: not found\n - RESPONSE_CODE_METHOD_NOT_ALLOWED: method not allowed\n - RESPONSE_CODE_INTERNAL_SERVER_ERROR: server error\n - RESPONSE_CODE_NOT_IMPLEMENTED: not implemented\n - RESPONSE_CODE_SERVICE_UNAVAILABLE: service unavailable"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "pruebav1DeletePruebaByIdResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/apipruebav1MetaResponse"
        }
      }
    },
    "pruebav1FindPruebasResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pruebav1Prueba"
          }
        },
        "meta": {
          "$ref": "#/definitions/apipruebav1MetaResponse"
        }
      }
    },
    "pruebav1Prueba": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pruebav1UpsertPruebaRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "0 -\u003e create"
        },
        "name": {
          "type": "string",
          "title": "required"
        }
      },
      "required": [
        "name"
      ]
    },
    "pruebav1UpsertPruebaResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/pruebav1Prueba"
        },
        "meta": {
          "$ref": "#/definitions/apipruebav1MetaResponse"
        }
      }
    },
    "pruebav2DeletePruebaByIdResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/pruebav2MetaResponse"
        }
      }
    },
    "pruebav2FindPruebasResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pruebav2Prueba"
          }
        },
        "meta": {
          "$ref": "#/definitions/pruebav2MetaResponse"
        }
      }
    },
    "pruebav2MetaResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/pruebav2ResponseCode",
          "title": "RESPONSE_CODE_OK or other codes"
        },
        "message": {
          "type": "string",
          "title": "e.g. \"ok\", \"ip blocked\", \"db error\", \"user not found\""
        }
      },
      "description": "Your meta-object: only code and message."
    },
    "pruebav2Prueba": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pruebav2ResponseCode": {
      "type": "string",
      "enum": [
        "RESPONSE_CODE_UNSPECIFIED",
        "RESPONSE_CODE_OK",
        "RESPONSE_CODE_BAD_REQUEST",
        "RESPONSE_CODE_UNAUTHORIZED",
        "RESPONSE_CODE_FORBIDDEN",
        "RESPONSE_CODE_NOT_FOUND",
        "RESPONSE_CODE_METHOD_NOT_ALLOWED",
        "RESPONSE_CODE_INTERNAL_SERVER_ERROR",
        "RESPONSE_CODE_NOT_IMPLEMENTED",
        "RESPONSE_CODE_SERVICE_UNAVAILABLE"
      ],
      "default": "RESPONSE_CODE_UNSPECIFIED",
      "description": "Minimum set of codes. Zero is mandatory in proto3.\n\n - RESPONSE_CODE_OK: success\n - RESPONSE_CODE_BAD_REQUEST: bad request\n - RESPONSE_CODE_UNAUTHORIZED: unauthorized\n - RESPONSE_CODE_FORBIDDEN: forbidden\n - RESPONSE_CODE_NOT_FOUND: not found\n - RESPONSE_CODE_METHOD_NOT_ALLOWED: method not allowed\n - RESPONSE_CODE_INTERNAL_SERVER_ERROR: server error\n - RESPONSE_CODE_NOT_IMPLEMENTED: not implemented\n - RESPONSE_CODE_SERVICE_UNAVAILABLE: service unavailable"
    },
    "pruebav2UpsertPruebaRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "0 -\u003e create"
        },
        "name": {
          "type": "string",
          "title": "required"
        }
      },
      "required": [
        "name"
      ]
    },
    "pruebav2UpsertPruebaResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/pruebav2Prueba"
        },
        "meta": {
          "$ref": "#/definitions/pruebav2MetaResponse"
        }
      }
    },
    "pruebav3DeletePruebaByIdResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/pruebav3MetaResponse"
        }
      }
    },
    "pruebav3FindPruebasResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pruebav3Prueba"
          }
        },
        "meta": {
          "$ref": "#/definitions/pruebav3MetaResponse"
        }
      }
    },
    "pruebav3MetaResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/pruebav3ResponseCode",
          "title": "RESPONSE_CODE_OK or other codes"
        },
        "message": {
          "type": "string",
          "title": "e.g. \"ok\", \"ip blocked\", \"db error\", \"user not found\""
        }
      },
      "description": "Your meta-object: only code and message."
    },
    "pruebav3Prueba": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pruebav3ResponseCode": {
      "type": "string",
      "enum": [
        "RESPONSE_CODE_UNSPECIFIED",
        "RESPONSE_CODE_OK",
        "RESPONSE_CODE_BAD_REQUEST",
        "RESPONSE_CODE_UNAUTHORIZED",
        "RESPONSE_CODE_FORBIDDEN",
        "RESPONSE_CODE_NOT_FOUND",
        "RESPONSE_CODE_METHOD_NOT_ALLOWED",
        "RESPONSE_CODE_INTERNAL_SERVER_ERROR",
        "RESPONSE_CODE_NOT_IMPLEMENTED",
        "RESPONSE_CODE_SERVICE_UNAVAILABLE"
      ],
      "default": "RESPONSE_CODE_UNSPECIFIED",
      "description": "Minimum set of codes. Zero is mandatory in proto3.\n\n - RESPONSE_CODE_OK: success\n - RESPONSE_CODE_BAD_REQUEST: bad request\n - RESPONSE_CODE_UNAUTHORIZED: unauthorized\n - RESPONSE_CODE_FORBIDDEN: forbidden\n - RESPONSE_CODE_NOT_FOUND: not found\n - RESPONSE_CODE_METHOD_NOT_ALLOWED: method not allowed\n - RESPONSE_CODE_INTERNAL_SERVER_ERROR: server error\n - RESPONSE_CODE_NOT_IMPLEMENTED: not implemented\n - RESPONSE_CODE_SERVICE_UNAVAILABLE: service unavailable"
    },
    "pruebav3UpsertPruebaRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "0 -\u003e create"
        },
        "name": {
          "type": "string",
          "title": "required"
        }
      },
      "required": [
        "name"
      ]
    },
    "pruebav3UpsertPruebaResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/pruebav3Prueba"
        },
        "meta": {
          "$ref": "#/definitions/pruebav3MetaResponse"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "templatev1Type": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "title": "Type1/Type2"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DeleteTemplateByIdResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/apitemplatev1MetaResponse",
          "title": "Estado de la operación"
        }
      },
      "description": "* Respuesta de eliminación."
    },
    "v1ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Template"
          },
          "title": "Colección de plantillas"
        },
        "meta": {
          "$ref": "#/definitions/apitemplatev1MetaResponse",
          "title": "Estado de la operación"
        }
      },
      "description": "* Respuesta con la lista de plantillas."
    },
    "v1Template": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/templatev1Type"
        },
        "name": {
          "type": "string",
          "title": "ej. Template 1 / Template 2"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "* Plantilla de alerta/aviso."
    },
    "v1UpsertTemplateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "0 → crear"
        },
        "name": {
          "type": "string",
          "title": "ej. Template 1 / Template 2"
        }
      },
      "description": "* Cuerpo para crear/actualizar una plantilla.",
      "required": [
        "name"
      ]
    },
    "v1UpsertTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1Template",
          "title": "Plantilla creada/actualizada"
        },
        "meta": {
          "$ref": "#/definitions/apitemplatev1MetaResponse",
          "title": "Estado de la operación"
        }
      },
      "description": "* Resultado del upsert."
    }
  }
}
