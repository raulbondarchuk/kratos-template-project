// Code generated by module-tests.ps1; DO NOT EDIT.
package example_service

import (
	"context"
	"os"
	api_example "service/api/example/v1"
	example_biz "service/internal/feature/example/v1/biz"
	"testing"

	"github.com/go-kratos/kratos/v2/log"
)

type fakeRepo struct {
	List   func(ctx context.Context) ([]example_biz.Example, error)
	Upsert func(ctx context.Context, in *example_biz.Example) (*example_biz.Example, error)
	Delete func(ctx context.Context, id uint) error
}

func (f *fakeRepo) ListExamples(ctx context.Context) ([]example_biz.Example, error) {
	if f.List != nil {
		return f.List(ctx)
	}
	return nil, nil
}
func (f *fakeRepo) UpsertExample(ctx context.Context, in *example_biz.Example) (*example_biz.Example, error) {
	if f.Upsert != nil {
		return f.Upsert(ctx, in)
	}
	return in, nil
}
func (f *fakeRepo) DeleteExampleById(ctx context.Context, id uint) error {
	if f.Delete != nil {
		return f.Delete(ctx, id)
	}
	return nil
}

func TestExampleService_ListExamples_OK(t *testing.T) {
	logger := log.NewStdLogger(os.Stdout)
	repo := &fakeRepo{}
	uc := example_biz.NewExampleUsecase(repo, logger)
	svc := NewExampleService(uc)

	resp, err := svc.ListExamples(context.Background(), &api_example.ListExamplesRequest{})
	if err != nil {
		t.Fatalf("unexpected error: %v", err)
	}
	if resp.GetMeta().GetCode() != api_example.ResponseCode_RESPONSE_CODE_OK {
		t.Fatalf("meta.code = %v, want OK", resp.GetMeta().GetCode())
	}
}
func TestExampleService_UpsertExample_OK(t *testing.T) {
	logger := log.NewStdLogger(os.Stdout)
	repo := &fakeRepo{}
	uc := example_biz.NewExampleUsecase(repo, logger)
	svc := NewExampleService(uc)

	req := &api_example.UpsertExampleRequest{Id: 0, Name: "ExampleX"}
	resp, err := svc.UpsertExample(context.Background(), req)
	if err != nil {
		t.Fatalf("unexpected error: %v", err)
	}
	if resp.GetMeta().GetCode() != api_example.ResponseCode_RESPONSE_CODE_OK {
		t.Fatalf("meta.code = %v, want OK", resp.GetMeta().GetCode())
	}
}
func TestExampleService_DeleteExampleById_OK(t *testing.T) {
	logger := log.NewStdLogger(os.Stdout)
	repo := &fakeRepo{}
	uc := example_biz.NewExampleUsecase(repo, logger)
	svc := NewExampleService(uc)

	resp, err := svc.DeleteExampleById(context.Background(), &api_example.DeleteExampleByIdRequest{Id: 7})
	if err != nil {
		t.Fatalf("unexpected error: %v", err)
	}
	if resp.GetMeta().GetCode() != api_example.ResponseCode_RESPONSE_CODE_OK {
		t.Fatalf("meta.code = %v, want OK", resp.GetMeta().GetCode())
	}
}
