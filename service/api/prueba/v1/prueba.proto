syntax = "proto3";

package api.prueba.v1;

import "api/prueba/v1/errors.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

option go_package = "service/api/prueba;prueba";
option java_multiple_files = true;
option java_outer_classname = "PruebaProtoV1";
option java_package = "dev.kratos.api.prueba.prueba";

// Pruebav1Service: find, upsert, delete
service Pruebav1Service {
  // GET /v1/prueba - list or search by filters
  rpc FindPruebas(FindPruebasRequest) returns (FindPruebasResponse) {
    option (google.api.http) = { get: "/v1/prueba" };
  }

  // POST /v1/prueba - create or update (id=0 create, >0 update)
  rpc UpsertPrueba(UpsertPruebaRequest) returns (UpsertPruebaResponse) {
    option (google.api.http) = {
      post: "/v1/prueba"
      body: "*"
    };
  }

  // DELETE /v1/prueba?id=123 - delete by id
  rpc DeletePruebaById(DeletePruebaByIdRequest) returns (DeletePruebaByIdResponse) {
    option (google.api.http) = { delete: "/v1/prueba" };
  }
}

message FindPruebasRequest {
  uint32 id   = 1 [(google.api.field_behavior) = OPTIONAL]; // optional
  string name = 2 [(google.api.field_behavior) = OPTIONAL]; // optional
}

message FindPruebasResponse {
  repeated Prueba items = 1;
  MetaResponse meta = 2;
}

message UpsertPruebaRequest {
  uint32 id   = 1 [(google.api.field_behavior) = OPTIONAL]; // 0 -> create
  string name = 2 [(google.api.field_behavior) = REQUIRED]; // required
}

message UpsertPruebaResponse {
  Prueba item = 1;
  MetaResponse meta = 2;
}

message DeletePruebaByIdRequest {
  uint32 id = 1 [(google.api.field_behavior) = REQUIRED]; // required
}

message DeletePruebaByIdResponse {
  MetaResponse meta = 1;
}

message Prueba {
  uint32 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}